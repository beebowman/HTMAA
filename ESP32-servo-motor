//Fab Academy 2020 - Fab Lab Le√≥n
//Servo without library                         
//ESP32


int servo = 5;

int angle;
int pwm;

void setup()
{
 pinMode(servo, OUTPUT);
 Serial.begin(9600); 
}
//int angle=90;
int timer=1500;
//timer=map(angle, 0,180,1000,2000);
void loop ()
{

//if button 1 is pressed, then
   for (angle = 0; angle <= 170; angle += 1)  { // for (angle = 0; angle <= 140; angle += 5)  {
//   servoPulse(servo, angle);  }
timer=map(angle, 0,180,1000,2000);
  digitalWrite(5,HIGH);
  delayMicroseconds(timer); //180 degrees is 2000, 0 degrees is 1,000
  digitalWrite(5,LOW);
  delayMicroseconds(20000-timer); 
//20ms wave 
   }

//if button 2 is pressed then    
for (angle = 170; angle >= 0; angle -= 1)  { // for (angle = 0; angle <= 140; angle += 5)  {
//   servoPulse(servo, angle);  }
timer=map(angle, 0,180,1000,2000);
  digitalWrite(5,HIGH);
  delayMicroseconds(timer); //180 degrees is 2000, 0 degrees is 1,000
  digitalWrite(5,LOW);
  delayMicroseconds(20000-timer); 
//20ms wave 
   }

  
// for (angle = 0; angle <= 170; angle += 1)  { // for (angle = 0; angle <= 140; angle += 5)  {
//   servoPulse(servo, angle);  }
// for (angle = 170; angle >= 0; angle -= 1)  {
//   servoPulse(servo, angle);  }
   
}

//Note: to change the distance it goes, change the angle in the middle from 90 to 160, for example (90 is less distance, 160 is more) 
//To give the movements higher granularity (smoother), change the last angle to a lower number, e.g. angle +=1 instead of angle +=5 
// 
//void servoPulse (int servo, int angle)
//{
// pwm = (angle*11) + 500;      // Convert angle to microseconds
// digitalWrite(servo, HIGH);
// delayMicroseconds(pwm);
// digitalWrite(servo, LOW);
// delay(100);                   // Refresh cycle of servo (increasing this causes delays, decreasing it causes less delay/faster) 
//}
